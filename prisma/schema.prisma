generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(cuid())

  username String    @unique
  email    String    @unique
  password Password?

  orders Order[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Password {
  id String @id @default(cuid())

  hash String

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id String @id @default(cuid())

  slug        String @unique
  name        String @unique
  imageURL    String
  price       Int
  description String
  sku         String @unique

  brand   Brand?  @relation(fields: [brandId], references: [id])
  brandId String?

  OrderItem OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Brand {
  id String @id @default(cuid())

  name         String
  founder      String?
  headQuarters String?
  established  DateTime? @default(now())
  type         String?

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model OrderItem {
  id String @id @default(cuid())

  quantity Int @default(1)

  product   Product @relation(fields: [productId], references: [id])
  productId String

  order   Order  @relation(fields: [orderId], references: [id])
  orderId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(cuid())

  user   User?   @relation(fields: [userId], references: [id])
  userId String?

  status String @default("CART")

  items OrderItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
